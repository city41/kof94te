{
  "description": "Go to new routine after HTP instead of team select",
  "subroutineSpace": {
    "start": "97000",
    "end": "bfff0"
  },
  "symbols": {
    "VRAMADDR": "3c0000",
    "ROM_CONTINUE_POSITION_TABLE": "45448",
    "BIOS_PLAYER_MOD1": "10fdb6",
    "BIOS_PLAYER_MOD2": "10fdb7",
    "BIOS_P1CHANGE": "10fd97",
    "BIOS_P2CHANGE": "10fd9d",
    "PALETTE_WHITE": "7fff",
    "PALETTE_BLACK": "8000",
    "CPU_RANDOM_SELECT_COUNTER_FOR_P1": "1083d3",
    "CPU_RANDOM_SELECT_COUNTER_FOR_P2": "1081d3",
    "P1_CHOSEN_CHARS_IN_ORDER_OF_FIGHTING": "108232",
    "P1_CHOSEN_CHARS_IN_ORDER_OF_CHOOSING": "108235",
    "P2_CHOSEN_CHARS_IN_ORDER_OF_FIGHTING": "108432",
    "P2_CHOSEN_CHARS_IN_ORDER_OF_CHOOSING": "108435",
    "DEFEATED_TEAMS": "1087df",
    "WINNING_TEAM_LIST": "10f7c0",
    "VSTRING_DATA": "10f7d0",
    "FIX_STRING_DATA": "10f7e0",
    "MORE_STRING_DATA": "10f7f0",
    "PLAY_MODE": "10f7fc",
    "P1_CUR_INPUT": "10f800",
    "P1_CURSOR_X": "10f802",
    "P1_CURSOR_Y": "10f804",
    "P1_CHOSEN_CHAR0": "10f806",
    "P1_CHOSEN_CHAR1": "10f808",
    "P1_CHOSEN_CHAR2": "10f80a",
    "P1_NUM_CHOSEN_CHARS": "10f80c",
    "P1_FOCUSED_CHAR_NAME_FIX_ADDRESS": "10f80e",
    "P1_CHAR_NAME_TABLE_ADDRESS": "10f810",
    "P2_CUR_INPUT": "10f8a0",
    "P2_CURSOR_X": "10f8a2",
    "P2_CURSOR_Y": "10f8a4",
    "P2_CHOSEN_CHAR0": "10f8aa",
    "P2_CHOSEN_CHAR1": "10f8a8",
    "P2_CHOSEN_CHAR2": "10f8a6",
    "P2_NUM_CHOSEN_CHARS": "10f8ac",
    "P2_FOCUSED_CHAR_NAME_FIX_ADDRESS": "10f8ae",
    "P2_CHAR_NAME_TABLE_ADDRESS": "10f8b0",
    "READY_TO_EXIT_CHAR_SELECT": "10f8e0",
    "IN_CHAR_SELECT_FLAG": "10f8e4",
    "STORE_A0A1A2": "10f8e6",
    "WIN_SCREEN_ALREADY_SET_LEFT": "10f910",
    "CHAR_SELECT_COUNTER": "10f911",
    "AFTER_SCREEN_POSITION_TABLE": "10f912",
    "MOVEM_STORAGE": "10fa10",
    "CPU_RANDOM_SELECT_ALREADY_USED_INDEXES": "10fb00",

    "GRID_IMAGE_SI": "153",
    "P1C1_SI": "169",
    "P2C1_SI": "16f",
    "P1_CURSOR_LEFT_SI": "175",
    "P1_CURSOR_RIGHT_SI": "176",
    "P2_CURSOR_LEFT_SI": "177",
    "P2_CURSOR_RIGHT_SI": "178",
    "RUGAL_SI": "179",
    "RANDOM_SELECT_SI": "17b",

    "PX_CUR_INPUT_OFFSET": "0",
    "PX_CURSOR_X_OFFSET": "2",
    "PX_CURSOR_Y_OFFSET": "4",
    "PX_CHOSEN_CHAR0_OFFSET": "6",
    "PX_CHOSEN_CHAR1_OFFSET": "8",
    "PX_CHOSEN_CHAR2_OFFSET": "a",
    "PX_NUM_CHOSEN_CHARS_OFFSET": "c",
    "PX_FOCUSED_CHAR_NAME_FIX_ADDRESS_OFFSET": "e",
    "PX_CHAR_NAME_TABLE_ADDRESS": "10",
    "P1_FOCUSED_NAME_FIX_ADDRESS_VALUE": "7056",
    "P2_FOCUSED_NAME_FIX_ADDRESS_VALUE": "72f6"
  },
  "patches": [
    {
      "type": "prom",
      "string": true,
      "value": "     Hack isn't finished yet          ",
      "symbol": "HACK_ISNT_FINISHED_YET"
    },
    {
      "type": "prom",
      "string": true,
      "value": "     More info: neorh.mattgreer.dev   ",
      "symbol": "MORE_INFO"
    },
    {
      "type": "prom",
      "description": "general string to fix layer routine",
      "subroutine": true,
      "symbol": "STRING_TO_FIX_LAYER_ROUTINE",
      "patchAsm": "stringToFixLayer.asm"
    },
    {
      "type": "prom",
      "description": "clean up straggling word",
      "address": "13260e",
      "patchAsm": ["nop"]
    },
    {
      "type": "prom",
      "string": true,
      "value": "HEIDERN        RALF           CLARK          ATHENA ASAMIYA SIE KENSOU     CHIN GENTSAI   KYO KUSANAGI   BENIMARU N.    GORO DAIMON    HEAVY D!       LUCKY GLAUBER  BRIAN BATTLER  KIM KAPHWAN    CHANG KOEHAN   CHOI BOUNGE    TERRY BOGARD   ANDY BOGARD    JOE HIGASHI    RYO SAKAZKI    ROBERT GARCIA  TAKUMA SAKAZAKIYURI SAKAZAKI  MAI SHIRANUI   KING           RUGAL          O.RUGAL        ROULETTE?      ",
      "symbol": "P1_CHAR_NAME_TABLE"
    },
    {
      "type": "prom",
      "string": true,
      "value": "        HEIDERN           RALF          CLARK ATHENA ASAMIYA     SIE KENSOU   CHIN GENTSAI   KYO KUSANAGI    BENIMARU N.    GORO DAIMON       HEAVY D!  LUCKY GLAUBER  BRIAN BATTLER    KIM KAPHWAN   CHANG KOEHAN    CHOI BOUNGE   TERRY BOGARD    ANDY BOGARD    JOE HIGASHI    RYO SAKAZKI  ROBERT GARCIATAKUMA SAKAZAKI  YURI SAKAZAKI   MAI SHIRANUI           KING          RUGAL        O.RUGAL      ROULETTE?",
      "symbol": "P2_CHAR_NAME_TABLE"
    },
    {
      "type": "prom",
      "description": "position in grid to character id map",
      "subroutine": true,
      "symbol": "GRID_TO_CHARACTER_ID",
      "patchAsm": "positionInGridToCharacterId.asm"
    },
    {
      "type": "prom",
      "description": "palettes",
      "subroutine": true,
      "symbol": "PALETTES",
      "patchAsm": "palettes.asm"
    },
    {
      "type": "prom",
      "description": "team to grey out table for greying out defeated teams",
      "subroutine": true,
      "symbol": "TEAM_TO_GREY_OUT_TABLE",
      "patchAsm": "team_to_grey_out_table.asm"
    },
    {
      "type": "prom",
      "description": "character_grid image",
      "subroutine": true,
      "symbol": "CHARACTER_GRID_IMAGE",
      "patchAsm": "character_grid.asm"
    },
    {
      "type": "prom",
      "description": "rugal_character_grid image",
      "subroutine": true,
      "symbol": "RUGAL_CG_IMG",
      "patchAsm": "rugal_character_grid.asm"
    },
    {
      "type": "prom",
      "description": "avatars image",
      "subroutine": true,
      "symbol": "AVATARS_IMAGE",
      "patchAsm": "avatars.asm"
    },
    {
      "type": "prom",
      "description": "p1 cursor, left image",
      "subroutine": true,
      "symbol": "P1_CURSOR_LEFT_IMAGE",
      "patchAsm": "p1_cursor_left.asm"
    },
    {
      "type": "prom",
      "description": "p1 cursor, right image",
      "subroutine": true,
      "symbol": "P1_CURSOR_RIGHT_IMAGE",
      "patchAsm": "p1_cursor_right.asm"
    },
    {
      "type": "prom",
      "description": "p2 cursor, left image",
      "subroutine": true,
      "symbol": "P2_CURSOR_LEFT_IMAGE",
      "patchAsm": "p2_cursor_left.asm"
    },
    {
      "type": "prom",
      "description": "p2 cursor, right image",
      "subroutine": true,
      "symbol": "P2_CURSOR_RIGHT_IMAGE",
      "patchAsm": "p2_cursor_right.asm"
    },
    {
      "type": "prom",
      "description": "cpu cursor, left, image",
      "subroutine": true,
      "symbol": "CPU_CURSOR_LEFT_IMAGE",
      "patchAsm": "cpu_cursor_left.asm"
    },
    {
      "type": "prom",
      "description": "cpu cursor, right, image",
      "subroutine": true,
      "symbol": "CPU_CURSOR_RIGHT_IMAGE",
      "patchAsm": "cpu_cursor_right.asm"
    },
    {
      "type": "prom",
      "description": "empty chosen avatar",
      "subroutine": true,
      "symbol": "EMPTY_CHOSEN_AVATAR",
      "patchAsm": "empty_chosen_avatar.asm"
    },
    {
      "type": "prom",
      "description": "load palettes routine",
      "subroutine": true,
      "symbol": "LOAD_P_A_L_E_T_T_E_S",
      "patchAsm": "loadPalettes.asm"
    },
    {
      "type": "prom",
      "description": "render static image routine",
      "subroutine": true,
      "symbol": "RENDER_STATIC_IMAGE",
      "patchAsm": "renderStaticImage.asm"
    },
    {
      "type": "prom",
      "description": "move sprite routine",
      "subroutine": true,
      "symbol": "MOVE_SPRITE",
      "patchAsm": "moveSprite.asm"
    },
    {
      "type": "prom",
      "description": "map from team index on OG team select to XY for cpu cursor",
      "subroutine": true,
      "symbol": "TEAM_INDEX_TO_XY",
      "patchAsm": "teamSelectIndexToXY.asm"
    },
    {
      "type": "prom",
      "description": "move cpu cursor routine",
      "subroutine": true,
      "symbol": "MOVE_CPU_CURSOR",
      "patchAsm": "moveCpuCursor.asm"
    },
    {
      "type": "prom",
      "description": "move cursor routine",
      "subroutine": true,
      "symbol": "MOVE_CURSOR",
      "patchAsm": "moveCursor.asm"
    },
    {
      "type": "prom",
      "description": "render currently focused character name",
      "subroutine": true,
      "symbol": "RENDER_CUR_FOCUSED_CHAR_NAME",
      "patchAsm": "renderCurFocusedCharName.asm"
    },
    {
      "type": "prom",
      "description": "truncate sprites routine",
      "subroutine": true,
      "symbol": "TRUNCATE_SPRITES_ROUTINE",
      "patchAsm": "truncateSpritesRoutine.asm"
    },
    {
      "type": "prom",
      "description": "clear p1 and p2 focused char names",
      "subroutine": true,
      "symbol": "CLEAR_FOCUSED_NAMES_FROM_FIX_ROUTINE",
      "patchAsm": "clearFocusedNamesFromFix.asm"
    },
    {
      "type": "prom",
      "description": "teardown routine",
      "subroutine": true,
      "symbol": "CHAR_SELECT_TEARDOWN_ROUTINE",
      "patchAsm": "charSelectTeardownRoutine.asm"
    },
    {
      "type": "prom",
      "description": "clear chosen avatar routine",
      "subroutine": true,
      "symbol": "CLEAR_CHOSEN_AVATAR",
      "patchAsm": "clearChosenAvatar.asm"
    },
    {
      "type": "prom",
      "description": "render chosen avatar routine",
      "subroutine": true,
      "symbol": "RENDER_CHOSEN_AVATAR",
      "patchAsm": "renderChosenAvatar.asm"
    },
    {
      "type": "prom",
      "description": "player routine",
      "subroutine": true,
      "symbol": "CHAR_SELECT_PLAYER_ROUTINE",
      "patchAsm": "charSelectPlayerRoutine.asm"
    },
    {
      "type": "prom",
      "description": "main routine",
      "subroutine": true,
      "symbol": "CHAR_SELECT_MAIN_ROUTINE",
      "patchAsm": "charSelectMainRoutine.asm"
    },
    {
      "type": "prom",
      "description": "adds Rugal to the char select grid for the boss fight",
      "subroutine": true,
      "symbol": "PUT_RUGAL_ON_GRID",
      "patchAsm": "putRugalOnGrid.asm"
    },
    {
      "type": "prom",
      "description": "greys out teams that have been defeated on the character grid",
      "subroutine": true,
      "symbol": "GREY_OUT_TEAMS",
      "patchAsm": "greyOutDefeatedTeams.asm"
    },
    {
      "type": "prom",
      "description": "init empty chosen avatars routine",
      "subroutine": true,
      "symbol": "INIT_EMPTY_AVATARS",
      "patchAsm": "initEmptyChosenAvatars.asm"
    },
    {
      "type": "prom",
      "description": "init routine",
      "subroutine": true,
      "symbol": "CHAR_SELECT_INIT_ROUTINE",
      "patchAsm": "charSelectInitRoutine.asm"
    },
    {
      "type": "prom",
      "descrition": "jump to char init after team init is done",
      "address": "13703c",
      "subroutine": true,
      "patchAsm": [
        "jsr $2CHAR_SELECT_INIT_ROUTINE",
        "move.l #$37046, $108584",
        "rts"
      ]
    },
    {
      "type": "prom",
      "description": "clean up straggling word",
      "address": "137042",
      "patchAsm": ["nop"]
    },
    {
      "type": "prom",
      "description": "skip the sprite clearing block",
      "address": "13369c",
      "subroutine": true,
      "patchAsm": [
        ";;; restore what was clobbered",
        "lea $336a6, A2",
        "adda.w D1, A2",
        ";;; end restore what was clobbered",
        "move.b $IN_CHAR_SELECT_FLAG, D5",
        "cmpi.b #1, D5",
        "bne done",
        "lea $337a6, A2 ; skip all sprite clears",
        "done:",
        "rts"
      ]
    },
    {
      "type": "prom",
      "description": "remove adda as it is now in the subroutine",
      "address": "1336a2",
      "patchAsm": ["nop"]
    },
    {
      "type": "prom",
      "description": "skip the sprite clearing block",
      "address": "1337cc",
      "subroutine": true,
      "patchAsm": [
        ";;; restore what was clobbered",
        "lea $337d6, A2",
        "adda.w D1, A2",
        ";;; end restore what was clobbered",
        "move.b $IN_CHAR_SELECT_FLAG, D5",
        "cmpi.b #1, D5",
        "bne done",
        "lea $338d6, A2 ; skip all sprite clears",
        "done:",
        "rts"
      ]
    },
    {
      "type": "prom",
      "description": "remove adda as it is now in the subroutine",
      "address": "1337d2",
      "patchAsm": ["nop"]
    },
    {
      "type": "prom",
      "description": "skip the sprite clearing block",
      "address": "133a28",
      "subroutine": true,
      "patchAsm": [
        ";;; restore what was clobbered",
        "lea $33a32, A0",
        "adda.w D2, A0",
        ";;; end restore what was clobbered",
        "move.b $IN_CHAR_SELECT_FLAG, D5",
        "cmpi.b #1, D5",
        "bne done",
        "lea $33b32, A0 ; skip all sprite clears",
        "done:",
        "rts"
      ]
    },
    {
      "type": "prom",
      "description": "remove adda as it is now in the subroutine",
      "address": "133a2e",
      "patchAsm": ["nop"]
    },
    {
      "skip": true,
      "type": "prom",
      "description": "skip team select counter decrement",
      "address": "13705a",
      "patchAsm": ["subq.b #0, $655(a5)"]
    },
    {
      "type": "prom",
      "description": "Run char select soon after vblank ack",
      "address": "132be4",
      "subroutine": true,
      "patchAsm": [
        "move.b $IN_CHAR_SELECT_FLAG, D5",
        "cmpi.b #1, D5",
        "bne skipCharSelectMain",

        "jsr $2CHAR_SELECT_MAIN_ROUTINE",
        ";;; now put fix strings onto the screen",
        "movem.l A5/A6,$STORE_A0A1A2",
        "lea $VSTRING_DATA, A6",
        "jsr $2STRING_TO_FIX_LAYER_ROUTINE",
        "lea $FIX_STRING_DATA, A6",
        "jsr $2STRING_TO_FIX_LAYER_ROUTINE",
        "lea $MORE_STRING_DATA, A6",
        "jsr $2STRING_TO_FIX_LAYER_ROUTINE",
        "movem.l $STORE_A0A1A2, A5/A6",

        "skipCharSelectMain:",
        ";;; restore what got clobbered",
        "jsr $6536",
        ";;; end replace",
        "rts"
      ]
    },
    {
      "type": "prom",
      "description": "have the game leave our palettes alone",
      "address": "133642",
      "subroutine": true,
      "patchAsm": [
        "move.b $IN_CHAR_SELECT_FLAG, D5",
        "cmpi.b #1, D5",
        "bne skip ; not in char select? nothing to do",
        "cmpi.w #15, D0",
        "ble skip ; not touching one of our palettes? nothing to do",
        "cmpi.w #89, D0",
        "bge skip ; not touching one of our palettes? nothing to do",
        "move.w #89, D0  ; have it write into a palette that isn't ours",
        "skip:",
        "lea $400000, A1",
        "done:",
        "rts"
      ]
    },
    {
      "type": "prom",
      "description": "Check for exit after team select",
      "address": "137074",
      "subroutine": true,
      "patchAsm": [
        ";;; restore what got clobbered",
        "move.b #$3c, $655(A5)",
        ";;; if the char select should be read only, we don't want to do anything",
        "btst #7, $PLAY_MODE",
        "bne done",
        "move.b $READY_TO_EXIT_CHAR_SELECT, D5",
        "cmpi.b #1, D5",
        "bne notReadyYet",
        "move.w #$1, $108654 ; empty the timer so game naturally exits",
        "bra done",
        "notReadyYet:",
        "move.b #$14, $108654 ; reload the timer so we dont exit",
        "done:",
        "rts"
      ]
    },
    {
      "type": "prom",
      "description": "run teardown just before going to order select",
      "address": "137116",
      "subroutine": true,
      "patchAsm": [
        ";;; restore what was clobbered",
        "move.l #$37eb2, $584(A5)",
        ";;; end restore",
        "jsr $2CHAR_SELECT_TEARDOWN_ROUTINE",
        "rts"
      ]
    },
    {
      "type": "prom",
      "description": "clean up straggling word",
      "address": "13711c",
      "patchAsm": ["nop"]
    },
    {
      "type": "prom",
      "description": "set chosen team in membdisp",
      "address": "1379d2",
      "subroutine": true,
      "patchAsm": [
        ";;; dont set member disp if in char select, it can cause",
        ";;; sprite corruption with Changs, and it is not needed to boot",
        "move.b $IN_CHAR_SELECT_FLAG, D7",
        "bne done",
        "btst #0, $PLAY_MODE ; is p1 playing?",
        "beq skipPlayer1",
        "move.l A4, D7",
        "cmpi.l #$102900, D7",
        "bne p1_skipChar0",
        "move.b $P1_CHOSEN_CHAR0, D6",
        "move.b D6, $71(A4)",
        "bra done",
        "p1_skipChar0:",
        "cmpi.l #$102B00, D7",
        "bne p1_skipChar1",
        "move.b $P1_CHOSEN_CHAR1, D6",
        "move.b D6, $71(A4)",
        "bra done",
        "p1_skipChar1:",
        "cmpi.l #$102D00, D7",
        "bne p1_skipChar2",
        "move.b $P1_CHOSEN_CHAR2, D6",
        "move.b D6, $71(A4)",
        "bra done",
        "p1_skipChar2:",
        ";;;; this must be player 2, ie cpu",
        "move.b (A2,D0.w), $71(A4)",

        "skipPlayer1:",
        "btst #1, $PLAY_MODE ; is p2 playing?",
        "beq skipPlayer2",
        "move.l A4, D7",
        "cmpi.l #$102F00, D7",
        "bne p2_skipChar0",
        "move.b $P2_CHOSEN_CHAR0, D6",
        "move.b D6, $71(A4)",
        "bra done",
        "p2_skipChar0:",
        "cmpi.l #$103100, D7",
        "bne p2_skipChar1",
        "move.b $P2_CHOSEN_CHAR1, D6",
        "move.b D6, $71(A4)",
        "bra done",
        "p2_skipChar1:",
        "cmpi.l #$103300, D7",
        "bne p2_skipChar2",
        "move.b $P2_CHOSEN_CHAR2, D6",
        "move.b D6, $71(A4)",
        "bra done",

        "p2_skipChar2:",
        ";;;; this must be player 1, ie cpu",
        "move.b (A2,D0.w), $71(A4)",

        "skipPlayer2:",

        ";; demo mode",
        "cmpi.b #0, $PLAY_MODE",
        "bne done",
        "move.b (A2,D0.w), $71(A4)",

        "done:",
        "rts"
      ]
    },
    {
      "type": "prom",
      "description": "prevent A in team select, let the game continue once cpu random select is done",
      "address": "137466",
      "subroutine": true,
      "patchAsm": [
        ";;; first we are only ready if char select has finished",
        "move.b $READY_TO_EXIT_CHAR_SELECT, D5",
        "cmpi.b #1, D5",
        "beq checkForCpuDone ; char select has finished, now go see if cpu has finished",
        "cmp.b D0, D0 ; char select isn't done, force a zero result so the game doesn't move on",
        "bra done",
        "checkForCpuDone:",
        "cmpi.b #3, $PLAY_MODE ; is this versus mode?",
        "beq cpuIsDone ; it is versus mode, no need to wait for cpu",
        "btst #0, $PLAY_MODE ; is p1 playing?",
        "beq skipPlayer1",
        "cmpi.b #8, $108431 ; is the next fight Rugal?",
        "beq cpuIsDone",
        "move.b $CPU_RANDOM_SELECT_COUNTER_FOR_P1, D0 ; load the cpu random countdown",
        "bra checkIfCpuIsDone",
        "skipPlayer1:",
        "cmpi.b #8, $108231 ; is the next fight Rugal?",
        "beq cpuIsDone",
        "move.b $CPU_RANDOM_SELECT_COUNTER_FOR_P2, D0 ; load the cpu random countdown",
        "checkIfCpuIsDone:",
        "cmpi.b #$ff, D0 ; if it goes from 0 -> -1, then cpu is done random selecting",
        "beq cpuIsDone",
        "cmp.b D0, D0 ; cpu is not done yet, force a zero result so game doesn't move on",
        "bra done",
        "cpuIsDone:",
        "cmpi.b #0, D0 ; cpu is done, force a non-zero result so game does move on",
        "done:",
        "rts"
      ]
    },
    {
      "type": "prom",
      "description": "clean up straggling word",
      "address": "13746c",
      "patchAsm": ["nop"]
    },
    {
      "type": "prom",
      "description": "Have game use our dynamic x position table for win screen instead of the canned rom one",
      "address": "13fda6",
      "subroutine": true,
      "patchAsm": [
        ";; if a human won, use dynamic table, otherwise use static table",
        "btst #0, $PLAY_MODE ; is p1 playing?",
        "beq checkPlayerTwo",
        "btst #1, $PLAY_MODE ; is p2 playing?",
        "bne humanWon ; versus mode, so a human won",
        "; player 2 is the cpu, did player 1 lose?",
        "cmpi.b #$80, $108238 ; player 1 is human, did they lose?",
        "bne humanWon",
        "bra cpuWon",

        "checkPlayerTwo:",
        ";; we already know we are not in versus mode, otherwise we would not have branched here",
        "cmpi.b #$80, $108438 ; player 2 is human, did they lose?",
        "bne humanWon",

        "cpuWon:",
        ";; load the original static table",
        "move.l #$626ee, $506a(A5)",
        "bra done",

        "humanWon:",
        "move.l #$AFTER_SCREEN_POSITION_TABLE, $506a(A5)",

        "done:",
        "rts"
      ]
    },
    {
      "type": "prom",
      "description": "clean up straggling word",
      "address": "13fdac",
      "patchAsm": ["nop"]
    },
    {
      "type": "prom",
      "subroutine": true,
      "symbol": "CHAR_ID_TO_TEAM_ID",
      "patchAsm": "charIdToTeamId.asm"
    },
    {
      "type": "prom",
      "subroutine": true,
      "symbol": "WIN_SCREEN_TABLES",
      "patchAsm": "winScreenTables.asm"
    },
    {
      "type": "prom",
      "description": "Set up win screen based on custom team",
      "address": "13fd40",
      "subroutine": true,
      "symbol": "WINNER_SCREEN_INIT",
      "patchAsm": "winScreenInit.asm"
    },
    {
      "type": "prom",
      "description": "Have game use our dynamic x position table for continue screen instead of the canned rom one",
      "address": "145422",
      "patchAsm": ["lea $AFTER_SCREEN_POSITION_TABLE, A0"]
    },
    {
      "type": "prom",
      "description": "Load the actual losing characters into the continue screen",
      "address": "145da8",
      "subroutine": true,
      "patchAsm": "continueScreenInit.asm"
    },
    {
      "type": "prom",
      "description": "Set up character colors (reg or alt, ie mirror match)",
      "address": "1032f0",
      "subroutine": true,
      "symbol": "SETUP_CHARACTER_COLORS",
      "patchAsm": "setupCharacterColors.asm"
    },
    {
      "type": "prom",
      "description": "Set up character colors (reg or alt, ie mirror match) at the second location",
      "address": "103374",
      "subroutine": true,
      "symbol": "SECOND_LOCATION_CAR_COLS",
      "patchAsm": "setupCharacterColors.asm"
    },
    {
      "type": "prom",
      "description": "Set up character colors (reg or alt, ie mirror match) at the second location",
      "address": "103318",
      "subroutine": true,
      "symbol": "THIRD_LOCATION_CAR_COLS",
      "patchAsm": "setupCharacterColors.asm"
    },
    {
      "type": "prom",
      "description": "Dont set character palettes during char select",
      "address": "1032e4",
      "subroutine": true,
      "patchAsm": [
        "move.b $IN_CHAR_SELECT_FLAG, D5",
        "cmpi.b #1, D5",
        "beq inCharSelect",
        "; not in char select, set up D3 for looping as before",
        "moveq #$d, D3",
        "bra done",
        "inCharSelect:",
        "; in char select, set D3 to 1 so only one loop happens, less cpu usage",
        "move.w #1, D3",
        "lea $401900, A2 ; have it write to palette #200, which we don't care about",
        "done:",
        ";;; restore what was clobbered",
        "move.w $70(A4), D0",
        "rts"
      ]
    },
    {
      "type": "prom",
      "description": "Choose the next cpu team in single player mode",
      "address": "1375fc",
      "subroutine": true,
      "patchAsm": [
        ";; D0 contains the raw rng result",
        "getNextTeam:",
        "andi.w #$7, D0 ; chop it down to bottom 3 bits",
        ";;; at this point we have a random 0-7",
        ";;; now as long as it is a defeated team, increment",
        "btst D0, $CPU_RANDOM_SELECT_ALREADY_USED_INDEXES",
        "beq done ; not a defeated team, we're good",
        "addi.b #1, D0 ; move onto the next team and try again",
        "bra getNextTeam",
        "done:",
        "bset D0, $CPU_RANDOM_SELECT_ALREADY_USED_INDEXES ; store we've seen this team for next time",
        ";;; this +7 causes a minimum of one loop for visual effect",
        ";;; but will still land on the team we decided on",
        ";;; 7 and not 8 because the game is using dbra",
        "addq.w #7, D0",
        "rts"
      ]
    },
    {
      "type": "prom",
      "description": "Get rid of the game's add 8 as we are adding 7 now (above)",
      "address": "137602",
      "patchAsm": ["nop"]
    },
    {
      "type": "prom",
      "description": "Have the game stop playing the 'chose team' sound effect",
      "address": "106556",
      "subroutine": true,
      "patchAsm": [
        "cmpi.b #1, $IN_CHAR_SELECT_FLAG",
        "bne play ; not in char select, let the sound play",
        "cmpi.b #$61, D0 ; in char select, is the sound the chose team sound effect?",
        "bne play ; some other sound, let it play",
        "bra done",
        "play:",
        "move.b D0, $320000",
        "done:",
        "rts"
      ]
    },
    {
      "type": "prom",
      "subroutine": true,
      "symbol": "CUTSCENE2_TABLES",
      "patchAsm": "cutscene2Tables.asm"
    },
    {
      "type": "prom",
      "description": "Inits cutscene 1 and 2 (and 3?)",
      "address": "13511e",
      "subroutine": true,
      "symbol": "CUTSCENE_INIT",
      "patchAsm": "cutsceneInit.asm"
    },
    {
      "type": "prom",
      "description": "Have game use our dynamic x/y position table for cutscene2 instead of the canned rom one. This fits because the rom has a nop right after",
      "address": "143cb0",
      "patchAsm": ["lea $AFTER_SCREEN_POSITION_TABLE, A0"]
    },
    {
      "type": "prom",
      "description": "Replace the team select background with the order select one",
      "address": "d8c00",
      "patchAsm": "orderSelectBgForTeamSelect.asm"
    }
  ]
}
